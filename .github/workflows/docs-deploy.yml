# Simple workflow for deploying static content to GitHub Pages
name: Deploy VitePress Docs to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ['main'] # Or your default branch name

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20 # Or the version your project uses
          cache: 'pnpm'
      - name: Set up pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8 # Or the version your project uses
      - name: Install dependencies
        run: pnpm install
      - name: Build VitePress site
        # Assuming your build script is 'docs:build' in package.json
        # If not, replace 'docs:build' with the correct script name
        run: pnpm run docs:build
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload entire directory from the build output
          # Default VitePress output is docs/.vitepress/dist
          path: 'docs/.vitepress/dist'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
